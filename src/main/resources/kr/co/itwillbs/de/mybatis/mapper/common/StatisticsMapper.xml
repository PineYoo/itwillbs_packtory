<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.itwillbs.de.common.mapper.StatisticsMapper">

	<!-- href: https://mybatis.org/mybatis-3/ko/dynamic-sql.html -->
	<sql id="templates" >
		<![CDATA[]]><!-- Character DATA(CDATA) 는 <![CDATA[문자열]]> 파싱되지 않고 그대로 출력을 위함, 쿼리에서 이스케이프 문자를 사용하지 않기 위해 썼음 -->
		<!-- 예시) 컬럼명 &gt;(&lt;) #{필드명} -> 컬럼명<![CDATA[>(<)]]> #{필드명} -->
		<if test="blabla != null"></if><!-- mybatis가 동적쿼리가 되는 시작 점. -->
		
		<choose><!-- mybatis switch 문 -->
			<when test="bla != null">
			</when>
			<when test="bla != null and blabla != null">
			</when>
			<otherwise>
			</otherwise>
		</choose>
		
		<where></where><!-- where 엘리먼트는 태그에 의해 컨텐츠가 리턴되면 단순히 “WHERE”만을 추가한다. 게다가 컨텐츠가 “AND”나 “OR”로 시작한다면 그 “AND”나 “OR”를 지워버린다. -->
		<trim prefix="WHERE" prefixOverrides="AND |OR "></trim><!-- 위의<where>의 <trim>버전 -->
		
		<set></set><!--  set 엘리먼트는 동적으로 SET 키워드를 붙히고 필요없는 콤마를 제거한다. -->
		<trim prefix="SET" suffixOverrides=","></trim><!-- 위의<set>의 <trim>버전 -->
		
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")" nullable="true">
			#{item}
		</foreach>
		
		<foreach item="item" index="index" collection="list">
			(#{item.index}, #{item.id}, #{item.name}, #{item.isDeleted})
		</foreach>
		<!-- like 문 사용 시
		[MySQL||H2]column LIKE CONCAT('%',#{keyword},'%')
		[Oracle]column LIKE '%'||#{keyword}||'%'
		[MSSQL]column LIKE '%'+#{keyword}+'%'
		 -->
	</sql>
	
	<sql id="t_approval_columns_forSelect">
		  a.idx					-- 테이블_인덱스
		, a.approval_type		-- 문서타입
		, a.progress_status		-- 진행상태
		, a.doc_no				-- 서류코드
		, a.title				-- 제목
		, a.content				-- 내용
		, a.recipe_master_idx	-- 레시피마스터_idx
		, a.event_start_date	-- 휴가시작일
		, a.event_end_date		-- 휴가종료일
		, a.drafter_id			-- 기안자
		, a.draft_date			-- 기안일자
		, a.due_date			-- 마감일자
		, a.reg_date			-- 작성일자
		, a.mod_id				-- 최종 작성자
		, a.mod_date			-- 최종 작성일자
	</sql>
	
	<!-- 오늘 결재 완료 된 기안서 조회 -->
	<select id="getSelectApprovedToday" resultType="kr.co.itwillbs.de.groupware.dto.ApprovalDTO">
	    SELECT 
			<include refid="t_approval_columns_forSelect"></include>
	      FROM t_approval a
	     WHERE a.progress_status = '3'    -- 결재 완료(3)
  	   	   AND DATE(a.mod_date) = CURDATE(); -- 오늘 날짜로 승인된 데이터
	</select>
	
	<update id="updateApprovedRecipe">
		UPDATE t_recipe_master
		   SET approval_status = '1'	-- 결재완료(1)
		 WHERE idx = #{recipeMasterIdx}
	</update>
	
	<insert id="insertApprovedVacation">
		INSERT INTO t_commute (employee_id, reg_date, work_status_code)
	    SELECT #{employeeId}, #{date}, '6'
	    FROM DUAL				-- DUAL: 더미테이블
	    WHERE NOT EXISTS (		-- 해당 날짜, 사번에 휴가들어가 있으면 insert 하지 않음
	        SELECT 1 
	        FROM t_commute 
	        WHERE employee_id = #{employeeId} 
	          AND DATE(reg_date) = #{date}
	          AND work_status_code = '6'
	    )
	</insert>
	
</mapper>