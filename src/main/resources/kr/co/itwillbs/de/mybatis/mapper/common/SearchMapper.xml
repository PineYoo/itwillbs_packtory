<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.itwillbs.de.common.mapper.SearchMapper">
	<!-- 거래처 리스트 컬럼 -->
	<sql id="employee_list_columns_forSelect">
	      e.id                                  -- 사번
	    , e.name                                -- 이름
	    , e.department_code                     -- 부서코드
	    , ci2.minor_name AS department_name	    -- 부서명
	    , e.sub_department_code                 -- 하위부서코드
	    , di.child_name AS sub_department_name  -- 하위부서명
	    , e.position_code                       -- 직책코드
	    , ci3.minor_name AS position_name  	    -- 직책명
	    , ed.phone_number                       -- 전화번호
	    , ed.email		               			-- 이메일
	</sql>
	
	<!-- 검색조건에 따른 사원 리스트 조회 -->
	<select id="getEmployeeList" parameterType="kr.co.itwillbs.de.human.dto.EmployeeSearchDTO"
								 resultType="kr.co.itwillbs.de.human.dto.EmployeeDTO">
		SELECT 
			<include refid="employee_list_columns_forSelect"></include>
		  FROM t_employee e
		  JOIN t_employee_detail ed
		    ON ed.id = e.id
		    
		-- 부서명
		  LEFT JOIN t_commoncode_item ci2 
		    ON e.department_code = ci2.minor_code 
		   AND ci2.major_code = 'DEPARTMENT_CODE'
		   
		-- 하위부서명
		  LEFT JOIN t_department_info di
		    ON e.department_code = di.department_code
		   AND e.sub_department_code = di.child_code
		   
		-- 직책명
		  LEFT JOIN t_commoncode_item ci3
		    ON e.position_code = ci3.minor_code
		   AND ci3.major_code = 'POSITION_CODE'
		   
	    <where>
	        <if test="departmentCode != null and departmentCode != ''">
	            AND e.department_code = #{departmentCode}
	        </if>
	        <if test="subDepartmentCode != null and subDepartmentCode != ''">
	            AND e.sub_department_code = #{subDepartmentCode}
	        </if>
	        <if test="positionCode != null and positionCode != ''">
	            AND e.position_code = #{positionCode}
	        </if>
	        <if test="searchKeyword != null and searchKeyword != ''">
	            AND (
	                   e.id LIKE CONCAT('%', #{searchKeyword}, '%')
	                OR e.name LIKE CONCAT('%', #{searchKeyword}, '%')
	            )
	        </if>
	    </where>
		 ORDER BY e.id
		 LIMIT #{pageDTO.size} OFFSET #{pageDTO.offset}
	</select>

	<!-- 검색조건에 따른 사원 리스트 조회(페이징처리용) -->
	<select id="getEmployeeCountForPaging" parameterType="kr.co.itwillbs.de.human.dto.EmployeeSearchDTO"
									 	   resultType="int">
		SELECT COUNT(*)
		  FROM t_employee e
		  JOIN t_employee_detail ed
		    ON ed.id = e.id
		    
		-- 부서명
		  LEFT JOIN t_commoncode_item ci2 
		    ON e.department_code = ci2.minor_code 
		   AND ci2.major_code = 'DEPARTMENT_CODE'
		   
		-- 하위부서명
		  LEFT JOIN t_department_info di
		    ON e.department_code = di.department_code
		   AND e.sub_department_code = di.child_code
		   
		-- 직책명
		  LEFT JOIN t_commoncode_item ci3
		    ON e.position_code = ci3.minor_code
		   AND ci3.major_code = 'POSITION_CODE'
		   
	    <where>
	        <if test="departmentCode != null and departmentCode != ''">
	            AND e.department_code = #{departmentCode}
	        </if>
	        <if test="subDepartmentCode != null and subDepartmentCode != ''">
	            AND e.sub_department_code = #{subDepartmentCode}
	        </if>
	        <if test="positionCode != null and positionCode != ''">
	            AND e.position_code = #{positionCode}
	        </if>
	        <if test="searchKeyword != null and searchKeyword != ''">
	            AND (
	                   e.id LIKE CONCAT('%', #{searchKeyword}, '%')
	                OR e.name LIKE CONCAT('%', #{searchKeyword}, '%')
	            )
	        </if>
	    </where>
	</select>

	<!-- 부서 리스트 조회 -->
	<select id="getDepartmentList" resultType="kr.co.itwillbs.de.human.dto.EmployeeCodeDTO">
		SELECT minor_code AS code, minor_name AS name
		  FROM t_commoncode_item
		 WHERE major_code = 'DEPARTMENT_CODE'
	</select>
	
	<!-- 하위부서 리스트 조회 -->
	<select id="getSubDepartmentList" resultType="kr.co.itwillbs.de.human.dto.EmployeeCodeDTO">
		SELECT child_code AS code, child_name AS name
		  FROM t_department_info
		 WHERE parent_code = #{departmentCode}
	</select>

	<!-- 직급 리스트 조회 -->
	<select id="getPositionList" resultType="kr.co.itwillbs.de.human.dto.EmployeeCodeDTO">
		SELECT minor_code AS code, minor_name AS name
		  FROM t_commoncode_item
		 WHERE major_code = 'POSITION_CODE'
	</select>
	
	<!-- =========================================================== -->
	<!-- 거래처 리스트 컬럼 -->
	<sql id="client_list_columns_forSelect">
		  c.idx						-- 인덱스	
	    , c.company_number			-- 사업자번호
	    , c.company_name			-- 거래처명(상호명)
	    , c.owner_name				-- 대표자명
	    , c.company_category		-- 업태
	    , c.company_subject			-- 종목
	    , c.phone_number			-- 전화
	    , c.e_mail					-- 이메일
	    , c.fax_number				-- 팩스
	    , c.post_code				-- 우편번호
	    , c.address1				-- 주소1
	    , c.address2				-- 주소2
	    , c.credit_limit			-- 여신한도
	    , c.is_deleted				-- 삭제유무
	    , c.memo					-- 메모
	    , c.status					-- 상태
	    , c.status_message			-- 상태_상세내용
	    , ci.client_employee_id		-- 담당자사번
	    , ci.client_employee_name	-- 담당자
	    , ci.client_employee_memo	-- 담당자 메모
	    , ci.phone1					-- 전화1
	    , ci.phone2					-- 전화2
	</sql>
	
	<!-- 검색조건에 따른 거래처 리스트 조회 -->
	<select id="getClientList" parameterType="kr.co.itwillbs.de.orders.dto.ClientSearchDTO"
								 resultType="kr.co.itwillbs.de.orders.dto.ClientDTO">
		SELECT 
			<include refid="client_list_columns_forSelect"></include>
		  FROM t_client c
		  JOIN t_client_info ci
		    ON ci.company_number = c.company_number
		   
	    <where>
	        <if test="searchKeyword != null and searchKeyword != ''">
	            AND (
	                   c.company_number LIKE CONCAT('%', #{searchKeyword}, '%')
	                OR c.company_name LIKE CONCAT('%', #{searchKeyword}, '%')
	                OR c.owner_name LIKE CONCAT('%', #{searchKeyword}, '%')
	            )
	        </if>
	    </where>
		 ORDER BY c.company_number
		 LIMIT #{pageDTO.size} OFFSET #{pageDTO.offset}
	</select>

	<!-- 검색조건에 따른 거래처 리스트 조회(페이징처리용) -->
	<select id="getClientCountForPaging" parameterType="kr.co.itwillbs.de.orders.dto.ClientSearchDTO"
									 	 resultType="int">
		SELECT COUNT(*)
		  FROM t_client c
		  JOIN t_client_info ci
		    ON ci.company_number = c.company_number
		   
	    <where>
	        <if test="searchKeyword != null and searchKeyword != ''">
	            AND (
	                   c.company_number LIKE CONCAT('%', #{searchKeyword}, '%')
	                OR c.company_name LIKE CONCAT('%', #{searchKeyword}, '%')
	                OR c.owner_name LIKE CONCAT('%', #{searchKeyword}, '%')
	            )
	        </if>
	    </where>
	</select>
	
	<!-- =========================================================== -->
	<!-- 상품 리스트 컬럼 -->
	<sql id="product_list_columns_forSelect">
	      p.idx   				     	-- 인덱스
	    , p.name						-- 이름
	    , p.price	  					-- 가격
	    , DATE(p.reg_date) AS reg_date	-- 등록일
	</sql>
	
	<!-- 검색조건에 따른 상품 리스트 조회 -->
	<select id="getProductList" parameterType="kr.co.itwillbs.de.mes.dto.ProductSearchDTO"
								resultType="kr.co.itwillbs.de.mes.dto.ProductDTO">
		SELECT 
			<include refid="product_list_columns_forSelect"></include>
		  FROM t_product p
		
	    <where>
	        p.is_deleted = 'N'
	        <if test="searchKeyword != null and searchKeyword != ''">
	            AND (
	                   p.name LIKE CONCAT('%', #{searchKeyword}, '%')
	            )
	        </if>
	    </where>
		 ORDER BY p.reg_date desc						-- 최근 등록 순
		 LIMIT #{pageDTO.size} OFFSET #{pageDTO.offset}
	</select>
	
	<!-- 검색조건에 따른 상품 리스트 조회(페이징처리용) -->
	<select id="getProductCountForPaging" parameterType="kr.co.itwillbs.de.mes.dto.ProductSearchDTO"
									 	  resultType="int">
		SELECT COUNT(*) 
		  FROM t_product p
		
	    <where>
	        p.is_deleted = 'N'
	        <if test="searchKeyword != null and searchKeyword != ''">
	            AND (
	                   p.name LIKE CONCAT('%', #{searchKeyword}, '%')
	            )
	        </if>
	    </where>
	</select>
	
	<!-- 레시피 리스트 컬럼 -->
	<sql id="recipe_list_columns_forSelect">
		  rm.idx					-- 테이블 인덱스
		, rm.product_idx			-- 상품_idx
		, p.name AS product_name	-- 상품명
		, rm.name					-- 이름
		, rm.version				-- 버전
		, rm.batch_size				-- 레시피_단위
		, rm.status					-- 상태
		, rm.approval_status		-- 결재_상태
		, rm.valid_from				-- 유효기간 시작일
		, rm.valid_to				-- 유효기간 종료일
		, rm.is_deleted				-- 삭제여부
		, rm.reg_id					-- 작성자
		, rm.reg_date				-- 작성일시
		, rm.mod_id					-- 최종작성자
		, rm.mod_date				-- 최종작성일시
	</sql>
	
	<!-- 검색조건에 따른 레시피 리스트 조회 -->
	<select id="getRecipeList" parameterType="kr.co.itwillbs.de.mes.dto.RecipeSearchDTO"
								resultType="kr.co.itwillbs.de.mes.dto.RecipeDTO">
		SELECT 
			<include refid="recipe_list_columns_forSelect"></include>
		  FROM t_recipe_master rm
		
		-- 상품 idx
		  JOIN t_product p
		    ON p.idx = rm.product_idx
	    <where>
		        rm.is_deleted = 'N'
	        AND rm.approval_status = '0'
	        <if test="searchKeyword != null and searchKeyword != ''">
	            AND (
	                   rm.name LIKE CONCAT('%', #{searchKeyword}, '%')
	                OR p.name LIKE CONCAT('%', #{searchKeyword}, '%')
	            )
	        </if>
	    </where>
		 ORDER BY rm.reg_date desc						-- 최근 등록 순
		 LIMIT #{pageDTO.size} OFFSET #{pageDTO.offset}
	</select>
	
	<!-- 검색조건에 따른 레시피 리스트 조회(페이징처리용) -->
	<select id="getRecipeCountForPaging" parameterType="kr.co.itwillbs.de.mes.dto.RecipeSearchDTO"
								resultType="int">
		SELECT COUNT(*)
		  FROM t_recipe_master rm
		
		-- 상품 idx
		  JOIN t_product p
		    ON p.idx = rm.product_idx
	    <where>
		        rm.is_deleted = 'N'
	        AND rm.approval_status = '0'	-- 작성완료(RECIPE_MASTER_APPROVAL)
	        <if test="searchKeyword != null and searchKeyword != ''">
	            AND (
	                   rm.name LIKE CONCAT('%', #{searchKeyword}, '%')
	                OR p.name LIKE CONCAT('%', #{searchKeyword}, '%')
	            )
	        </if>
	    </where>
		 ORDER BY rm.reg_date desc						-- 최근 등록 순
	</select>
	<!-- ===================================================================== -->
	<!-- 라인 리스트 컬럼 -->
	<sql id="location_list_columns_forSelect">
		  idx
		, type
		, name
		, postcode
		, address1
		, address2
		, memo
		, is_deleted
		, reg_id
		, reg_date
		, mod_id
		, mod_date
	</sql>
	
	<select id="getLocationInfoList" parameterType="kr.co.itwillbs.de.mes.dto.LocationInfoSearchDTO"
								resultType="kr.co.itwillbs.de.mes.dto.LocationInfoDTO">
		SELECT
		<include refid="location_list_columns_forSelect"></include>
		  FROM t_location_info
		<where>
			<if test="searchKeyword != null and searchKeyword != ''">
			AND (name LIKE CONCAT('%', #{searchKeyword} ,'%'))
			</if>
		</where>
	</select>
	
	<select id="getLocationInfoCountForPaging" parameterType="kr.co.itwillbs.de.mes.dto.LocationInfoSearchDTO"
								resultType="int">
		SELECT COUNT(*)
		  FROM t_location_info
		<where>
			   is_deleted = 'N'
			<if test="searchKeyword != null and searchKeyword != ''">
			AND (name LIKE CONCAT('%', #{searchKeyword} ,'%'))
			</if>
		</where>
	</select>
	
	<!-- ===================================================================== -->
	<!-- 작업자 스킬 리스트 컬럼 -->
	<select id="getWorkerMetricCountForPaging" parameterType="kr.co.itwillbs.de.mes.dto.WorkerMetricsSearchDTO"
												resultType="int">
		<include refid="PublicSql.withWorkerInfo" />
		SELECT COUNT(*)
		  FROM workerBase
		<where>
			<if test="searchKeyword != null and searchKeyword != ''">
				AND (
					id LIKE CONCAT('%', #{searchKeyword}, '%')
					OR name LIKE CONCAT('%', #{searchKeyword}, '%')
				)
			</if>
			<if test="isSupervisor != null and isSupervisor.trim() != ''">
			AND is_supervisor = #{isSupervisor}
			</if>
			<if test="isLinesManager != null and isLinesManager.trim() != ''">
			AND is_lines_manager = #{isLinesManager}
			</if>
		</where>
	</select>
	
	<select id="getWorkerMetricList" parameterType="kr.co.itwillbs.de.mes.dto.WorkerMetricsSearchDTO"
										resultType="kr.co.itwillbs.de.mes.dto.WorkerMetricsDTO">
		<include refid="PublicSql.withWorkerInfo" />
		select
			(total_count - row_asc + 1) AS rownum,
			id AS employee_id,
			name AS employee_name,
			department_name,
			sub_department_name,
			position_name,
			is_supervisor,
			is_lines_manager,
			is_forklift_operator,
			is_driver
		from numberedWorkers
		<where>
			<if test="searchKeyword != null and searchKeyword != ''">
				AND (
					id LIKE CONCAT('%', #{searchKeyword}, '%')
					OR name LIKE CONCAT('%', #{searchKeyword}, '%')
				)
			</if>
			<if test="isSupervisor != null and isSupervisor.trim() != ''">
			AND is_supervisor = #{isSupervisor}
			</if>
			<if test="isLinesManager != null and isLinesManager.trim() != ''">
			AND is_lines_manager = #{isLinesManager}
			</if>
		</where>
		ORDER BY id
		LIMIT #{pageDTO.size} OFFSET #{pageDTO.offset}
	</select>
	
	<!-- 검색조건에 따른 자재 리스트 조회 -->
	<select id="getMaterialList" parameterType="kr.co.itwillbs.de.mes.dto.RawMaterialSearchDTO"
								    resultType="kr.co.itwillbs.de.mes.dto.RawMaterialDTO">
		SELECT 
		      rm.idx
		    , rm.parents_idx
		    , rm2.name AS parentsName
		    , rm.client_idx
		    , c.company_name AS clientCompanyName
		    , rm.type
		    , ci.minor_name AS typeName
		    , rm.name
		    , rm.unit
		    , ci2.minor_name AS unitName
		    , rm.quantity
		    , rm.price
		    , rm.lead_time
		    , rm.expiry_date
		    , rm.storage_condition
		    , rm.msds_link
		    , rm.is_deleted
		    , rm.reg_id
		    , rm.reg_date
		    , rm.mod_id
		    , rm.mod_date
		  FROM t_raw_material rm
		  LEFT JOIN t_raw_material rm2
		    ON rm.parents_idx = rm2.idx
		  LEFT JOIN t_client c
		    ON rm.client_idx = c.idx
		  LEFT JOIN t_commoncode_item ci
		    ON rm.type = ci.minor_code
		   AND ci.major_code = 'MATERIAL_TYPE'
		  LEFT JOIN t_commoncode_item ci2
		    ON rm.unit = ci2.minor_code
		   AND ci2.major_code = 'ITEM_UNIT' 
		<where>
				rm.parents_idx IS NULL
			AND rm.client_idx IS NULL
			<if test="searchKeyword != null and searchKeyword != ''">
				AND (
					rm.name LIKE CONCAT('%', #{searchKeyword}, '%')				-- name
					OR ci.minor_name LIKE CONCAT('%', #{searchKeyword}, '%')	-- typeName
				)
			</if>
		</where>
		ORDER BY rm.idx
		LIMIT #{pageDTO.size} OFFSET #{pageDTO.offset}
	</select>

	<!-- 검색조건에 따른 자재 리스트 조회(페이징처리용) -->
	<select id="getMaterialCountForPaging" parameterType="kr.co.itwillbs.de.mes.dto.RawMaterialSearchDTO"
								    resultType="int">
		SELECT COUNT(*)
		  FROM t_raw_material rm
		  LEFT JOIN t_raw_material rm2
		    ON rm.parents_idx = rm2.idx
		  LEFT JOIN t_client c
		    ON rm.client_idx = c.idx
		  LEFT JOIN t_commoncode_item ci
		    ON rm.type = ci.minor_code
		   AND ci.major_code = 'MATERIAL_TYPE'
		  LEFT JOIN t_commoncode_item ci2
		    ON rm.unit = ci2.minor_code
		   AND ci2.major_code = 'ITEM_UNIT' 
		<where>
				rm.parents_idx IS NULL
			AND rm.client_idx IS NULL
			<if test="searchKeyword != null and searchKeyword != ''">
				AND (
					rm.name LIKE CONCAT('%', #{searchKeyword}, '%')				-- name
					OR ci.minor_name LIKE CONCAT('%', #{searchKeyword}, '%')	-- typeName
				)
			</if>
		</where>
	</select>
	
	<!-- 검색조건에 따른 공정 리스트 조회 -->
	<select id="getRecipeProcessList" parameterType="kr.co.itwillbs.de.mes.dto.RecipeProcessSearchDTO"
								      resultType="kr.co.itwillbs.de.mes.dto.RecipeProcessDTO">
		SELECT
			  idx
			, master_idx
			, name
			, code
			, code_seq
			, standard_time
			, max_time
			, is_deleted
			, reg_id
			, reg_date
			, mod_id
			, mod_date
		  FROM t_recipe_process_code
		<where>
			<if test="searchKeyword != null and searchKeyword != ''">
				name LIKE CONCAT('%', #{searchKeyword}, '%')
			</if>
		</where>
		ORDER BY idx	-- code_seq로 가져오려 했으나 varchar라서 1, 10, 11, 12, ..., 2 이렇게 가져와짐
		LIMIT #{pageDTO.size} OFFSET #{pageDTO.offset}
	</select>
	
	<!-- 검색조건에 따른 공정 리스트 조회(페이징처리용) -->
	<select id="getRecipeProcessCountForPaging" parameterType="kr.co.itwillbs.de.mes.dto.RecipeProcessSearchDTO"
								      			resultType="int">
		SELECT COUNT(*)
		  FROM t_recipe_process_code
		<where>
			<if test="searchKeyword != null and searchKeyword != ''">
				name LIKE CONCAT('%', #{searchKeyword}, '%')
			</if>
		</where>
	</select>
	
</mapper>