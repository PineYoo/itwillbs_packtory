<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.itwillbs.de.mes.mapper.ProductMapper">

	<!-- 사원 등록 -->
	<insert id="insertEmployee"
		parameterType="kr.co.itwillbs.de.human.dto.EmployeeDTO">
		INSERT INTO t_employee (
		id, name, ssn,
		department_code,
		sub_department_code, position_code,
		hire_date, resignation_date,
		work_experience,
		reg_id, reg_date, is_deleted
		) VALUES (
		#{id}, #{name},
		#{ssn},
		#{departmentCode}, #{subDepartmentCode}, #{positionCode},
		#{hireDate}, #{resignationDate}, #{workExperience},
		#{regId}, NOW(),
		'N'
		)
	</insert>

	<!-- 사원 등록 시 Detail에 사원번호 저장 -->
	<insert id="insertEmployeeDetail" parameterType="string">
		INSERT INTO
		t_employee_detail (id)
		VALUES (#{id})
	</insert>

	<!-- 사원 검색 + 목록 조회 -->
	<select id="searchEmployeesCount" parameterType="kr.co.itwillbs.de.human.dto.EmployeeSearchDTO" resultType="int">
		SELECT count(*) FROM t_employee
		WHERE is_deleted = 'N'
		<if test="name != null and name != ''">
			AND name LIKE CONCAT('%', #{name}, '%')
		</if>
		<if test="departmentCode != null and departmentCode != ''">
			AND department_code = #{departmentCode}
		</if>
		<if test="subDepartmentCode != null and subDepartmentCode != ''">
			AND sub_department_code = #{subDepartmentCode}
		</if>
		<if test="positionCode != null and positionCode != ''">
			AND position_code = #{positionCode}
		</if>

		<choose>
			<when test="hireDateFrom != null and hireDateTo != null">
				and hire_date BETWEEN
				STR_TO_DATE(CONCAT(#{hireDateFrom},'000000'),'%Y-%m-%d%H%i%S')
				AND
				STR_TO_DATE(CONCAT(#{hireDateTo}, '235959'),'%Y-%m-%d%H%i%S')
			</when>
			<when test="hireDateFrom != null and hireDateTo == null">
				and hire_date <![CDATA[>=]]>
				STR_TO_DATE(CONCAT(#{hireDateFrom},'000000'),'%Y-%m-%d%H%i%S')
			</when>
			<when test="hireDateFrom == null and hireDateTo != null">
				and hire_date <![CDATA[<=]]>
				STR_TO_DATE(CONCAT(#{hireDateTo}, '235959'),'%Y-%m-%d%H%i%S')
			</when>
		</choose>

		<choose>
			<when
				test="resignationDateFrom != null and resignationDateTo != null">
				and resignation_date BETWEEN
				STR_TO_DATE(CONCAT(#{resignationDateFrom},'000000'),'%Y-%m-%d%H%i%S')
				AND
				STR_TO_DATE(CONCAT(#{resignationDateTo},'235959'),'%Y-%m-%d%H%i%S')
			</when>
			<when
				test="resignationDateFrom != null and resignationDateTo == null">
				and resignation_date <![CDATA[>=]]>
				STR_TO_DATE(CONCAT(#{resignationDateFrom},'000000'),'%Y-%m-%d%H%i%S')
			</when>
			<when
				test="resignationDateFrom == null and resignationDateTo != null">
				and resignation_date <![CDATA[<=]]>
				STR_TO_DATE(CONCAT(#{resignationDateTo}, '235959'),'%Y-%m-%d%H%i%S')
			</when>
		</choose>

		ORDER BY idx ASC
	</select>

	<!-- 사원 검색 + 목록 조회 -->
	<select id="searchEmployees" parameterType="kr.co.itwillbs.de.human.dto.EmployeeSearchDTO" resultType="kr.co.itwillbs.de.human.dto.EmployeeDTO">
		SELECT 
		e.*,
		cc.minor_name AS department_name,
		d.child_name AS sub_department_name,
		p.position_code AS position_name
		FROM t_employee e
		LEFT JOIN t_commoncode_item cc
			ON cc.major_code = 'DEPARTMENT_CODE' AND cc.minor_code = e.department_code
		LEFT JOIN t_department_info d
			ON d.parent_code = e.department_code AND d.child_code = e.sub_department_code
		LEFT JOIN t_position_info p
			ON p.idx = e.position_code
		WHERE e.is_deleted = 'N'
		<if test="name != null and name != ''">
			AND name LIKE CONCAT('%', #{name}, '%')
		</if>
		<if test="departmentCode != null and departmentCode != ''">
			AND e.department_code = #{departmentCode, jdbcType=INTEGER}
		</if>
		<if test="subDepartmentCode != null and subDepartmentCode != ''">
			AND e.sub_department_code = #{subDepartmentCode, jdbcType=INTEGER}
		</if>
		<if test="positionCode != null and positionCode != ''">
			AND e.position_code = #{positionCode, jdbcType=INTEGER}
		</if>

		<choose>
			<when test="hireDateFrom != null and hireDateTo != null">
				and hire_date BETWEEN
				STR_TO_DATE(CONCAT(#{hireDateFrom},'000000'),'%Y-%m-%d%H%i%S')
				AND STR_TO_DATE(CONCAT(#{hireDateTo}, '235959'),'%Y-%m-%d%H%i%S')
			</when>
			<when test="hireDateFrom != null and hireDateTo == null">
				and hire_date <![CDATA[>=]]>
				STR_TO_DATE(CONCAT(#{hireDateFrom},'000000'),'%Y-%m-%d%H%i%S')
			</when>
			<when test="hireDateFrom == null and hireDateTo != null">
				and hire_date <![CDATA[<=]]>
				STR_TO_DATE(CONCAT(#{hireDateTo}, '235959'),'%Y-%m-%d%H%i%S')
			</when>
		</choose>

		<choose>
			<when
				test="resignationDateFrom != null and resignationDateTo != null">
				and resignation_date BETWEEN
				STR_TO_DATE(CONCAT(#{resignationDateFrom},'000000'),'%Y-%m-%d%H%i%S')
				AND
				STR_TO_DATE(CONCAT(#{resignationDateTo},'235959'),'%Y-%m-%d%H%i%S')
			</when>
			<when
				test="resignationDateFrom != null and resignationDateTo == null">
				and resignation_date <![CDATA[>=]]>
				STR_TO_DATE(CONCAT(#{resignationDateFrom},'000000'),'%Y-%m-%d%H%i%S')
			</when>
			<when
				test="resignationDateFrom == null and resignationDateTo != null">
				and resignation_date <![CDATA[<=]]>
				STR_TO_DATE(CONCAT(#{resignationDateTo}, '235959'),'%Y-%m-%d%H%i%S')
			</when>
		</choose>

		ORDER BY idx ASC
		LIMIT #{pageDTO.size} OFFSET #{pageDTO.offset}
	</select>

	<!-- 사원 단건 조회 -->
	<select id="getEmployeeById" parameterType="String"
		resultType="kr.co.itwillbs.de.human.dto.EmployeeDTO">
		SELECT * FROM t_employee
		WHERE id = #{id} AND is_deleted =
		'N'
	</select>

	<!-- 사원 정보 수정 -->
	<update id="updateEmployee"
		parameterType="kr.co.itwillbs.de.human.dto.EmployeeDTO">
		UPDATE t_employee SET
		department_code =
		#{departmentCode},
		sub_department_code = #{subDepartmentCode},
		position_code = #{positionCode},
		resignation_date = #{resignationDate},
		work_experience = #{workExperience},
		mod_id = #{modId},
		mod_date = NOW()
		WHERE id = #{id} AND is_deleted = 'N'
	</update>

	<!-- 사원 삭제 (Soft Delete) -->
	<update id="deleteEmployee" parameterType="string">
		UPDATE t_employee SET
		is_deleted = 'Y',
		mod_date = NOW()
		WHERE id = #{id}
	</update>

</mapper>
