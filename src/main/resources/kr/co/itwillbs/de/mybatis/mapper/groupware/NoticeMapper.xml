<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="kr.co.itwillbs.de.groupware.mapper.NoticeMapper">
	
	<!-- href: https://mybatis.org/mybatis-3/ko/dynamic-sql.html -->
	<sql id="templates" >
		<![CDATA[]]><!-- Character DATA(CDATA) 는 <![CDATA[문자열]]> 파싱되지 않고 그대로 출력을 위함, 쿼리에서 이스케이프 문자를 사용하지 않기 위해 썼음 -->
		<!-- 예시) 컬럼명 &gt;(&lt;) #{필드명} -> 컬럼명<![CDATA[>(<)]]> #{필드명} -->
		<if test="blabla != null"></if><!-- mybatis가 동적쿼리가 되는 시작 점. -->
		
		<choose><!-- mybatis switch 문 -->
			<when test="bla != null">
			</when>
			<when test="bla != null and blabla != null">
			</when>
			<otherwise>
			</otherwise>
		</choose>
		
		<where></where><!-- where 엘리먼트는 태그에 의해 컨텐츠가 리턴되면 단순히 “WHERE”만을 추가한다. 게다가 컨텐츠가 “AND”나 “OR”로 시작한다면 그 “AND”나 “OR”를 지워버린다. -->
		<trim prefix="WHERE" prefixOverrides="AND |OR "></trim><!-- 위의<where>의 <trim>버전 -->
		
		<set></set><!--  set 엘리먼트는 동적으로 SET 키워드를 붙히고 필요없는 콤마를 제거한다. -->
		<trim prefix="SET" suffixOverrides=","></trim><!-- 위의<set>의 <trim>버전 -->
		
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")" nullable="true">
			#{item}
		</foreach>
		
		<foreach item="item" index="index" collection="list">
			(#{item.index}, #{item.id}, #{item.name}, #{item.isDeleted})
		</foreach>
		<!-- like 문 사용 시
		[MySQL||H2]column LIKE CONCAT('%',#{keyword},'%')
		[Oracle]column LIKE '%'||#{keyword}||'%'
		[MSSQL]column LIKE '%'+#{keyword}+'%'
		 -->
	</sql>
	
	<sql id="t_notice_columns_forSelect">
		n.idx,
		n.type,
		n.title,
		n.contents,
		n.is_banner,
		n.is_deleted,
		n.read_count,
		n.reg_id,
		n.reg_date,
		n.mod_id,
		n.mod_date
	</sql>
	
	<select id="getNoticeList" resultType="kr.co.itwillbs.de.groupware.dto.NoticeDTO">
		SELECT
			<include refid="t_notice_columns_forSelect"></include>
			 , c.minor_name AS codeName
		  FROM t_notice n JOIN t_commoncode_item c
		    ON n.type = c.minor_code
		   AND c.major_code = #{major_code}
	</select>
	
	<select id="getNoticeSearchList" parameterType="kr.co.itwillbs.de.groupware.dto.NoticeSearchDTO"
									resultType="kr.co.itwillbs.de.groupware.dto.NoticeDTO">
		SELECT
			<include refid="t_notice_columns_forSelect"></include>
			 , c.minor_name AS codeName
		  FROM t_notice n JOIN t_commoncode_item c
		    ON n.type = c.minor_code
		   AND c.major_code = #{major_code}
		<where>
			<if test="noticeSearchDTO.type != null and noticeSearchDTO.type.trim() != ''">
		   AND n.type = #{noticeSearchDTO.type}
			</if>
			<if test="noticeSearchDTO.title != null and noticeSearchDTO.title.trim() != ''">
		   AND n.title LIKE CONCAT('%', #{noticeSearchDTO.title}, '%') 
			</if>
			<if test="noticeSearchDTO.isDeleted != null and noticeSearchDTO.isDeleted.trim() != ''">
		   AND n.is_deleted = #{noticeSearchDTO.isDeleted}
			</if>
			<choose>
				<when test="(noticeSearchDTO.regStartDate != null and noticeSearchDTO.regStartDate.trim() != '')
							and (noticeSearchDTO.regEndDate != null and noticeSearchDTO.regEndDate.trim() != '')">
					AND n.reg_date BETWEEN STR_TO_DATE(CONCAT(#{noticeSearchDTO.regStartDate}, '000000'),'%Y-%m-%d%H%i%S') 
										AND STR_TO_DATE(CONCAT(#{noticeSearchDTO.regEndDate}, '235959'),'%Y-%m-%d%H%i%S')
				</when>
				<when test="(noticeSearchDTO.regStartDate != null and noticeSearchDTO.regStartDate.trim() != '')
							and (noticeSearchDTO.regEndDate == null or noticeSearchDTO.regEndDate.trim() == '')">
					AND n.reg_date <![CDATA[>=]]> STR_TO_DATE(CONCAT(#{noticeSearchDTO.regStartDate}, '000000'),'%Y-%m-%d%H%i%S')
				</when>
				<when test="(noticeSearchDTO.regStartDate == null or noticeSearchDTO.regStartDate.trim() == '')
							and (noticeSearchDTO.regEndDate != null and noticeSearchDTO.regEndDate.trim() != '')">
					AND n.reg_date <![CDATA[<=]]> STR_TO_DATE(CONCAT(#{noticeSearchDTO.regEndDate}, '235959'),'%Y-%m-%d%H%i%S')
				</when>
			</choose>
		</where>
	</select>
	
	<insert id="registerNotice" useGeneratedKeys="true" keyProperty="idx" parameterType="kr.co.itwillbs.de.groupware.dto.NoticeDTO">
		INSERT
		  INTO t_notice (
	  	<trim suffixOverrides=",">
		  	   type,
			   title,
			   contents,
			   is_banner,
			   is_deleted,
			   read_count,
			   reg_id,
			   reg_date,
	  	</trim>
			 )
		VALUES (
		<trim suffixOverrides=",">
			   #{type},
			   #{title},
			   #{contents},
			   #{isBanner},
			   #{isDeleted},
			   0,	-- 조회수 기본값 0
			   #{regId},
			   NOW(),
		</trim>
			 )
	</insert>
	
	<select id="getNotice" resultType="kr.co.itwillbs.de.groupware.dto.NoticeDTO">
		SELECT
			<include refid="t_notice_columns_forSelect"></include>
		  FROM t_notice n
		 WHERE idx = #{idx}
	</select>
	
	<update id="modifyNotice" parameterType="kr.co.itwillbs.de.groupware.dto.NoticeDTO">
		update t_notice
			<set>
				<if test="type != null">type = #{type},</if>
				<if test="title != null">title = #{title},</if>
				<if test="contents != null">contents = #{contents},</if>
				<if test="isBanner != null">is_banner = #{isBanner},</if>
				<if test="isDeleted != null">is_deleted = #{isDeleted},</if>
				<if test="modId != null">mod_id = #{modId},</if>
				<if test="modId != null">mod_date = now(),</if>
				<if test="idx != null">read_count = IFNULL(read_count,0) + 1,</if>
			</set>
		where idx = #{idx}
	</update>
	
	<update id="removeNotice" parameterType="kr.co.itwillbs.de.groupware.dto.NoticeDTO">
		update t_demo
			<set>
				<if test="isDeleted != null">is_deleted = #{isDeleted},</if>
			</set>
		where idx = #{idx}
	</update>
	
	<update id="removeFile" parameterType="kr.co.itwillbs.de.common.vo.FileVO">
		update t_files
			<set>
				<if test="isDeleted != null">is_deleted = #{isDeleted},</if>
			</set>
		where idx = #{idx}
	</update>
	
</mapper>












