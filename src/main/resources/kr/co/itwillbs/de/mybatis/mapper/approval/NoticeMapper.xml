<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="kr.co.itwillbs.de.approval.mapper.NoticeMapper">
	
	<!-- href: https://mybatis.org/mybatis-3/ko/dynamic-sql.html -->
	<sql id="templates" >
		<![CDATA[]]><!-- Character DATA(CDATA) 는 <![CDATA[문자열]]> 파싱되지 않고 그대로 출력을 위함, 쿼리에서 이스케이프 문자를 사용하지 않기 위해 썼음 -->
		<!-- 예시) 컬럼명 &gt;(&lt;) #{필드명} -> 컬럼명<![CDATA[>(<)]]> #{필드명} -->
		<if test="blabla != null"></if><!-- mybatis가 동적쿼리가 되는 시작 점. -->
		
		<choose><!-- mybatis switch 문 -->
			<when test="bla != null">
			</when>
			<when test="bla != null and blabla != null">
			</when>
			<otherwise>
			</otherwise>
		</choose>
		
		<where></where><!-- where 엘리먼트는 태그에 의해 컨텐츠가 리턴되면 단순히 “WHERE”만을 추가한다. 게다가 컨텐츠가 “AND”나 “OR”로 시작한다면 그 “AND”나 “OR”를 지워버린다. -->
		<trim prefix="WHERE" prefixOverrides="AND |OR "></trim><!-- 위의<where>의 <trim>버전 -->
		
		<set></set><!--  set 엘리먼트는 동적으로 SET 키워드를 붙히고 필요없는 콤마를 제거한다. -->
		<trim prefix="SET" suffixOverrides=","></trim><!-- 위의<set>의 <trim>버전 -->
		
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")" nullable="true">
			#{item}
		</foreach>
		
		<foreach item="item" index="index" collection="list">
			(#{item.index}, #{item.id}, #{item.name}, #{item.isDeleted})
		</foreach>
		<!-- like 문 사용 시
		[MySQL||H2]column LIKE CONCAT('%',#{keyword},'%')
		[Oracle]column LIKE '%'||#{keyword}||'%'
		[MSSQL]column LIKE '%'+#{keyword}+'%'
		 -->
	</sql>
	
	<sql id="t_notice_columns_forSelect">
		idx,
		type,
		title,
		contents,
		is_banner,
		is_deleted,
		read_count,
		file_idxs,
		reg_id,
		reg_date,
		mod_id,
		mod_date
	</sql>
	
	<select id="getNoticeList" resultType="kr.co.itwillbs.de.approval.dto.NoticeDTO">
		SELECT
			<include refid="t_notice_columns_forSelect"></include>
		  FROM t_notice
	</select>
	
	<insert id="registerNotice">
		INSERT
		  INTO t_notice (
	  	<trim suffixOverrides=",">
		  	   type,
			   title,
			   contents,
			   is_banner,
			   is_deleted,
			   read_count,
<!-- 			   file_idxs, -->
			   reg_id,
			   reg_date,
	  	</trim>
			 )
		VALUES (
		<trim suffixOverrides=",">
			  #{type},
			  #{title},
			  #{contents},
			  #{isBanner},
			  #{isDeleted},
			  0,	-- 조회수 기본값 0
<!-- 			  #{fileIdxs}, -->
			  NULL, -- 임시로 NULL()
			  NOW(),
		</trim>
			 )
	</insert>
	
	<select id="getNotice" resultType="kr.co.itwillbs.de.approval.dto.NoticeDTO">
		SELECT
			<include refid="t_notice_columns_forSelect"></include>
		  FROM t_notice
		 WHERE idx = #{idx}
	</select>
	
</mapper>












