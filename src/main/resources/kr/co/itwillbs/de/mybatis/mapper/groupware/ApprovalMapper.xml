<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
		"https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.itwillbs.de.groupware.mapper.ApprovalMapper">
	<sql id="templates" >
		<![CDATA[]]><!-- Character DATA(CDATA) 는 <![CDATA[문자열]]> 파싱되지 않고 그대로 출력을 위함, 쿼리에서 이스케이프 문자를 사용하지 않기 위해 썼음 -->
		<!-- 예시) 컬럼명 &gt;(&lt;) #{필드명} -> 컬럼명<![CDATA[>(<)]]> #{필드명} -->
		<if test="blabla != null"></if><!-- mybatis가 동적쿼리가 되는 시작 점. -->
		
		<choose><!-- mybatis switch 문 -->
			<when test="bla != null">
			</when>
			<when test="bla != null and blabla != null">
			</when>
			<otherwise>
			</otherwise>
		</choose>
		
		<where></where><!-- where 엘리먼트는 태그에 의해 컨텐츠가 리턴되면 단순히 “WHERE”만을 추가한다. 게다가 컨텐츠가 “AND”나 “OR”로 시작한다면 그 “AND”나 “OR”를 지워버린다. -->
		<trim prefix="WHERE" prefixOverrides="AND |OR "></trim><!-- 위의<where>의 <trim>버전 -->
		
		<set></set><!--  set 엘리먼트는 동적으로 SET 키워드를 붙히고 필요없는 콤마를 제거한다. -->
		<trim prefix="SET" suffixOverrides=","></trim><!-- 위의<set>의 <trim>버전 -->
		
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")" nullable="true">
			#{item}
		</foreach>
		
		<foreach item="item" index="index" collection="list">
			(#{item.index}, #{item.id}, #{item.name}, #{item.isDeleted})
		</foreach>
		<!-- like 문 사용 시
		[MySQL||H2]column LIKE CONCAT('%',#{keyword},'%')
		[Oracle]column LIKE '%'||#{keyword}||'%'
		[MSSQL]column LIKE '%'+#{keyword}+'%'
		 -->
	</sql>
	
	<sql id="t_approval_columns_forSelect">
		  a.idx					-- 테이블_인덱스
		, a.approval_type		-- 문서타입
		, a.progress_status		-- 진행상태
		, a.doc_no				-- 서류코드
		, a.title				-- 제목
		, a.content				-- 내용
		, a.recipe_master_idx	-- 레시피마스터_idx
		, a.event_start_date	-- 휴가시작일
		, a.event_end_date		-- 휴가종료일
		, a.drafter_id			-- 기안자
		, a.draft_date			-- 기안일자
		, a.due_date			-- 마감일자
		, a.reg_date			-- 작성일자
		, a.mod_id				-- 최종 작성자
		, a.mod_date			-- 최종 작성일자
	</sql>
	
	<sql id="t_approval_items_columns_forSelect">
		  ai.approver1				-- 결재자1
		, ai.approver2				-- 결재자2
		, ai.approver3				-- 결재자3
		, ai.approver1_status		-- 결재자1 상태
		, ai.approver2_status		-- 결재자2 상태
		, ai.approver3_status		-- 결재자3 상태
		, ai.approver1_date			-- 결재자1승인날짜
		, ai.approver2_date			-- 결재자2승인날짜
		, ai.approver3_date			-- 결재자3승인날짜
		, ai.approver1_signature	-- 결재자1서명
		, ai.approver2_signature	-- 결재자1서명
		, ai.approver3_signature	-- 결재자1서명
--		, ai.reg_id					-- 작성자
--		, ai.reg_date				-- 작성일자
--		, ai.mod_id					-- 최종 작성자
--		, ai.mod_date				-- 최종 작성일자
	</sql>
	
	<sql id="t_approval_join_columns_forSelect">
		  e.name					--	이름
		, e.ssn						--	주민등록번호
		, e.department_code			--	부서코드
		, e.department_name			--	부서이름
		, e.sub_department_code		--	팀코드
		, e.sub_department_name		--	팀이름
		, e.position_code			--	직급코드
		, e.position_name			--	직급이름
		, e.is_manager				--	결재권한유무
		, e.hire_date				--	입사일
		, e.resignation_date		--	퇴사일
		, e.phone_number			--	전화번호
		, e.email					--	이메일
		, e.file_idxs				--	파일인덱스
		, e.employee_status_code	--	직원상태코드
		
		, a.idx						-- 테이블_인덱스
		, a.approval_type			-- 문서타입
		, a.progress_status			-- 진행상태
		, a.doc_no					-- 서류코드
		, a.title					-- 제목
		, a.content					-- 내용
		, a.recipe_master_idx		-- 레시피마스터_idx
		, a.event_start_date		-- 휴가시작일
		, a.event_end_date			-- 휴가종료일
		, a.drafter_id				-- 기안자
		, a.draft_date				-- 기안일자
		, a.due_date				-- 마감일자
		
		, ai.approver1				-- 결재자1
		, ai.approver2				-- 결재자2
		, ai.approver3				-- 결재자3
		, ai.approver1_status		-- 결재자1 상태
		, ai.approver2_status		-- 결재자2 상태
		, ai.approver3_status		-- 결재자3 상태
		, ai.approver1_date			-- 결재자1승인날짜
		, ai.approver2_date			-- 결재자2승인날짜
		, ai.approver3_date			-- 결재자3승인날짜
		, ai.approver1_signature	-- 결재자1서명
		, ai.approver2_signature	-- 결재자1서명
		, ai.approver3_signature	-- 결재자1서명
	</sql>
	
	<!-- 사원정보 -->
	<sql id="withEmpBase">
		WITH empBase AS (
			SELECT
				  e.id
				, e.name
				, e.ssn
				, e.department_code
				, di.department_name
				, e.sub_department_code
				, di.child_name AS sub_department_name
				, e.position_code
				, pi.position_name
				, pi.is_manager
				, e.hire_date
				, e.resignation_date
				, ed.phone_number
				, ed.email
				, ed.file_idxs
				, ed.employee_status_code
			FROM t_employee AS e
			
			-- 직원 상세정보
			LEFT JOIN t_employee_detail AS ed
				ON e.id = ed.id

			-- 부서, 하위부서 정보
			LEFT JOIN ( 
				SELECT
					  di.idx
					, di.department_code
					, ci.minor_name AS department_name
					, di.parent_code
					, di.child_code
					, di.child_name
					, di.rank_number
					, di.is_deleted
					, di.location_idx
				FROM t_department_info AS di
				LEFT JOIN t_commoncode_item AS ci
					ON ci.major_code = 'DEPARTMENT_CODE'
				AND di.department_code = ci.minor_code
				) AS di
				ON e.department_code = di.department_code
				AND e.sub_department_code = di.child_code

			-- 직급 정보
			LEFT JOIN t_position_info AS pi     
				ON e.position_code = pi.position_code
			)
	</sql>
	
	<!-- ==================================================================== -->
	<!-- 전자결재 목록 조회 -->
	<select id="getApprovalList" resultType="kr.co.itwillbs.de.groupware.dto.ApprovalDTO"
									parameterType="kr.co.itwillbs.de.groupware.dto.ApprovalSearchDTO">
		<include refid="withEmpBase"></include>
		SELECT 
		<include refid="t_approval_join_columns_forSelect"></include>
			 , ci1.minor_name AS progressName
			 , ci2.minor_name AS approvalTypeName
		  FROM empBase e
		  
		  -- 전자결재
		  JOIN t_approval a
		    ON e.id = a.drafter_id
		    
		  -- 전자결재(items)
	      LEFT JOIN t_approval_items ai
   			ON ai.doc_no = a.doc_no
   		
   		  -- 전자결재 진행상태(공통코드)
		  JOIN t_commoncode_item ci1
		    ON a.progress_status = ci1.minor_code
		   AND ci1.major_code = 'PROGRESS_STATUS'
		  
		  -- 전자결재 타입(공통코드)
		  JOIN t_commoncode_item ci2
		    ON a.approval_type = ci2.minor_code
		   AND ci2.major_code = 'APPROVAL_TYPE'
		<where>
			1 = 1
			<if test="drafterId != null and drafterId != ''">	<!-- 기안자 / 결재자 -->
		   AND (a.drafter_id = #{drafterId}
		    OR  ai.approver1 = #{drafterId}
		    OR (ai.approver2 = #{drafterId} AND a.progress_status != 1 AND ai.approver1_status = 'Y')
		    OR (ai.approver3 = #{drafterId} AND a.progress_status != 1 AND ai.approver2_status = 'Y')
		     )
			</if>
			<if test="drafterName != null and drafterName.trim() != ''">
		   AND e.name LIKE CONCAT('%', #{drafterName}, '%')
			</if>
			<if test="title != null and title.trim() != ''">
		   AND a.title LIKE CONCAT('%', #{title}, '%')
			</if>
			<if test="progressStatus != null and progressStatus.trim() != ''">
		   AND ci1.minor_code = #{progressStatus}
			</if>
			<if test="approvalType != null and approvalType.trim() != ''">
		   AND ci2.minor_code = #{approvalType}
			</if>
			<if test="requestStartDate != null and requestStartDate != ''">
		   AND DATE(a.draft_date) &gt;= #{requestStartDate}
			</if>
			<if test="requestEndDate != null and requestEndDate != ''">
		   AND DATE(a.draft_date) &lt;= #{requestEndDate}
			</if>
			<if test="dueStartDate != null and dueStartDate != ''">
		   AND DATE(a.due_date) &gt;= #{dueStartDate}
			</if>
			<if test="dueEndDate != null and dueEndDate != ''">
		   AND DATE(a.due_date) &lt;= #{dueEndDate}
			</if>
		</where>
		 ORDER
		    BY a.draft_date DESC
		 LIMIT #{pageDTO.size} OFFSET #{pageDTO.offset}
	</select>
	
	<!-- 전자결재 목록 조회(페이징용 count) -->
	<select id="getApprovalCountBySearchDTO" parameterType="kr.co.itwillbs.de.groupware.dto.ApprovalSearchDTO"
												resultType="int">
		<include refid="withEmpBase"></include>
		SELECT COUNT(*)
		  FROM empBase e
		  
		  -- 전자결재
		  JOIN t_approval a
		    ON e.id = a.drafter_id
		    
		  -- 전자결재(items)
	      LEFT JOIN t_approval_items ai
   			ON ai.doc_no = a.doc_no
   		
   		  -- 전자결재 진행상태(공통코드)
		  JOIN t_commoncode_item ci1
		    ON a.progress_status = ci1.minor_code
		   AND ci1.major_code = 'PROGRESS_STATUS'
		  
		  -- 전자결재 타입(공통코드)
		  JOIN t_commoncode_item ci2
		    ON a.approval_type = ci2.minor_code
		   AND ci2.major_code = 'APPROVAL_TYPE'
		<where>
			1 = 1
			<if test="drafterId != null and drafterId != ''">	<!-- 기안자 / 결재자 -->
		   AND (a.drafter_id = #{drafterId}
		    OR  ai.approver1 = #{drafterId}
		    OR (ai.approver2 = #{drafterId} AND a.progress_status != 1 AND ai.approver1_status = 'Y')
		    OR (ai.approver3 = #{drafterId} AND a.progress_status != 1 AND ai.approver2_status = 'Y')
		     )
			</if>
			<if test="drafterName != null and drafterName.trim() != ''">
		   AND e.name LIKE CONCAT('%', #{drafterName}, '%')
			</if>
			<if test="title != null and title.trim() != ''">
		   AND a.title LIKE CONCAT('%', #{title}, '%')
			</if>
			<if test="progressStatus != null and progressStatus.trim() != ''">
		   AND ci1.minor_code = #{progressStatus}
			</if>
			<if test="approvalType != null and approvalType.trim() != ''">
		   AND ci2.minor_code = #{approvalType}
			</if>
			<if test="requestStartDate != null and requestStartDate != ''">
		   AND DATE(a.draft_date) &gt;= #{requestStartDate}
			</if>
			<if test="requestEndDate != null and requestEndDate != ''">
		   AND DATE(a.draft_date) &lt;= #{requestEndDate}
			</if>
			<if test="dueStartDate != null and dueStartDate != ''">
		   AND DATE(a.due_date) &gt;= #{dueStartDate}
			</if>
			<if test="dueEndDate != null and dueEndDate != ''">
		   AND DATE(a.due_date) &lt;= #{dueEndDate}
			</if>
		</where>
	</select>
	
	<!-- ==================================================================== -->
	<!-- 기안서 저장 -->
	<insert id="insertApproval" parameterType="kr.co.itwillbs.de.groupware.dto.ApprovalDTO">
		INSERT
		  INTO t_approval
		VALUES (null				-- idx(auto_increment)
			 , #{approvalType}		-- approval_type
			 , #{progressStatus}	-- progress_status
			 , #{docNo}				-- doc_no
			 , #{title}				-- title
			 , #{content}			-- content
			 , #{recipeMasterIdx}	-- recipe_master_idx
			 , #{eventStartDate}	-- event_start_date
			 , #{eventEndDate}		-- event_end_date
			 , #{regId}				-- drafter_id
			 , #{draftDate}			-- draft_date
			 , #{dueDate}			-- due_date
			 , 'Y'					-- is_deleted
			 , #{regId}				-- reg_id
			 , now()				-- reg_date
			 , null					-- mod_id(최초 등록시는 reg_id 만 넣고 update 시 mod_id 입력)
			 , null					-- mod_date
			 )
			 
		-- 데이터가 있으면 업데이트, 없으면 삽입 (doc_no -> UNIQUE 처리)
		ON DUPLICATE KEY UPDATE
		      approval_type   = VALUES(approval_type)
		    , progress_status   = VALUES(progress_status)
		    , title             = VALUES(title)
		    , content           = VALUES(content)
		    , recipe_master_idx = VALUES(recipe_master_idx)
		    , event_start_date  = VALUES(event_start_date)
		    , event_end_date    = VALUES(event_end_date)
		    , draft_date        = VALUES(draft_date)
		    , due_date          = VALUES(due_date)
		    , mod_id            = #{modId}
		    , mod_date          = now()
	</insert>
	<insert id="insertApprovalItems" parameterType="kr.co.itwillbs.de.groupware.dto.ApprovalDTO">
		INSERT
		  INTO t_approval_items
		VALUES (null				-- idx(auto_increment)
			 , #{docNo}				-- doc_no
			 , #{approver1}			-- approver1
			 , #{approver2}			-- approver2
			 , #{approver3}			-- approver3
			 , null					-- approver1_status
			 , null					-- approver2_status
			 , null					-- approver3_status
			 , null					-- approver1_date
			 , null					-- approver2_date
			 , null					-- approver3_date
			 , null					-- approver1_signature
			 , null					-- approver2_signature
			 , null					-- approver3_signature
			 , #{regId}				-- reg_id
			 , now()				-- reg_date
			 , null					-- mod_id(최초 등록시는 reg_id 만 넣고 update 시 mod_id 입력)
			 , null					-- mod_date
			 )
			 
		-- 데이터가 있으면 업데이트, 없으면 삽입 (doc_no -> UNIQUE 처리)
	    ON DUPLICATE KEY UPDATE
		      approver1           = VALUES(approver1)
		    , approver2           = VALUES(approver2)
		    , approver3           = VALUES(approver3)
		    , approver1_status    = VALUES(approver1_status)
		    , approver2_status    = VALUES(approver2_status)
		    , approver3_status    = VALUES(approver3_status)
		    , approver1_date      = VALUES(approver1_date)
		    , approver2_date      = VALUES(approver2_date)
		    , approver3_date      = VALUES(approver3_date)
		    , approver1_signature = VALUES(approver1_signature)
		    , approver2_signature = VALUES(approver2_signature)
		    , approver3_signature = VALUES(approver3_signature)
		    , mod_id              = #{modId}
		    , mod_date            = now()
	</insert>
	
	<select id="getApprovalByDocNo" resultType="kr.co.itwillbs.de.groupware.dto.ApprovalDTO">
		<include refid="withEmpBase"></include>
		SELECT 
		<include refid="t_approval_join_columns_forSelect"></include>
			 , emp1.name AS approver1Name
			 , emp2.name AS approver2Name
			 , emp3.name AS approver3Name
		  FROM empBase AS e

		  -- 전자결재
		  JOIN t_approval a
		    ON e.id = a.drafter_id
		    
		  -- 전자결재(items)
	      LEFT JOIN t_approval_items ai
   			ON ai.doc_no = a.doc_no
	
		  -- 결재자1 사원정보
		  LEFT JOIN t_employee emp1
		    ON ai.approver1 = emp1.id

		  -- 결재자2 사원정보
		  LEFT JOIN t_employee emp2
		    ON ai.approver2 = emp2.id

		  -- 결재자3 사원정보
		  LEFT JOIN t_employee emp3
		    ON ai.approver3 = emp3.id
		 
		 WHERE a.doc_no = #{docNo}
	</select>
	
	
	<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<update id="modifyApproval" parameterType="kr.co.itwillbs.de.groupware.dto.ApprovalDTO">
		UPDATE t_approval
			<set>
				<if test="approvalType != null">approval_type = #{approvalType},</if>
				<if test="docNo != null">doc_no = #{docNo},</if>
				<if test="title != null">title = #{title},</if>
				<if test="content != null">content = #{content},</if>
				<if test="draftDate != null">draft_date = #{draftDate},</if>
				<if test="dueDate != null">due_date = #{dueDate},</if>
				<if test="approver1 != null">approver1 = #{approver1},</if>
				<if test="approver2 != null">approver2 = #{approver2},</if>
				<if test="approver3 != null">approver3 = #{approver3},</if>
				<if test="modId != null">mod_id = #{modId},</if>
				<if test="modId != null">mod_date = now(),</if>
			</set>
		 WHERE idx = #{idx}
	</update>
	
	<select id="getApprovalSearchList" resultType="kr.co.itwillbs.de.groupware.dto.ApprovalDTO">
		SELECT a.idx
			 , a.title
			 , ci1.minor_name AS approvalTypeName
			 , ci2.minor_name AS progressName
			 , e.name
			 , a.draft_date
			 , a.due_date
		  FROM t_approval a
		  JOIN t_approval_items ai
		    ON ai.doc_no = a.doc_no
		  JOIN t_employee e
		    ON a.drafter_id = e.id
		  JOIN t_commoncode_item ci1
		    ON a.approval_type = ci1.minor_code
		   AND ci1.major_code = 'APPROVAL_TYPE'
		  JOIN t_commoncode_item ci2
		    ON a.progress_status = ci2.minor_code
		   AND ci2.major_code = 'PROGRESS_STATUS'
		<where>
			<if test="memberId != null and memberId != ''">
		   AND (a.drafter_id = #{memberId}
		    OR ai.approver1 = #{memberId}
		    OR (ai.approver2 = #{memberId} AND a.progress_status != 1 AND ai.approver1_status = 'Y')
		    OR (ai.approver3 = #{memberId} AND a.progress_status != 1 AND ai.approver2_status = 'Y')
		     )
			</if>
			<if test="search.drafterName != null and search.drafterName.trim() != ''">
		   AND e.name LIKE CONCAT('%', #{search.drafterName}, '%')
			</if>
			<if test="search.title != null and search.title.trim() != ''">
		   AND a.title LIKE CONCAT('%', #{search.title}, '%')
			</if>
			<if test="search.approvalType != null and search.approvalType.trim() != ''">
		   AND ci1.minor_code = #{search.approvalType}
			</if>
			<if test="search.progressStatus != null and search.progressStatus.trim() != ''">
		   AND ci2.minor_code = #{search.progressStatus}
			</if>
			<if test="search.requestStartDate != null and search.requestStartDate != ''">
		   AND DATE(a.draft_date) &gt;= #{search.requestStartDate}
			</if>
			<if test="search.requestEndDate != null and search.requestEndDate != ''">
		   AND DATE(a.draft_date) &lt;= #{search.requestEndDate}
			</if>
			<if test="search.dueStartDate != null and search.dueStartDate != ''">
		   AND DATE(a.due_date) &gt;= #{search.dueStartDate}
			</if>
			<if test="search.dueEndDate != null and search.dueEndDate != ''">
		   AND DATE(a.due_date) &lt;= #{search.dueEndDate}
			</if>
		</where>
	</select>
	
	<select id="getApprovalListByFilter" resultType="kr.co.itwillbs.de.groupware.dto.ApprovalDTO">
		<include refid="withEmpBase"></include>
		SELECT 
		<include refid="t_approval_join_columns_forSelect"></include>
			 , ci1.minor_name AS progressName
			 , ci2.minor_name AS approvalTypeName
		  FROM empBase e
		  JOIN t_approval a
		    ON e.id = a.drafter_id
		  JOIN t_approval_items ai
		    ON ai.doc_no = a.doc_no
		  JOIN t_commoncode_item ci1
		    ON a.progress_status = ci1.minor_code
		   AND ci1.major_code = 'PROGRESS_STATUS'
		  JOIN t_commoncode_item ci2
		    ON a.approval_type = ci2.minor_code
		   AND ci2.major_code = 'APPROVAL_TYPE'
		<where>
			<choose>
				<when test="filter.equals('drafted')">
				AND a.drafter_id = #{memberId}
				</when>
				<when test="filter.equals('waiting')">
				AND (
					(ai.approver1 = #{memberId} AND a.progress_status = 1)
					OR (ai.approver1_status = 'Y' AND ai.approver2 = #{memberId})
				 	OR (ai.approver2_status = 'Y' AND ai.approver3 = #{memberId})
				  )
				</when>
				<when test="filter.equals('completed')">
				AND (ai.approver1 = #{memberId}
				 	OR ai.approver2 = #{memberId}
				 	OR ai.approver3 = #{memberId}
				  )
				AND a.progress_status = 3
				</when>
			</choose>
		</where>
		 ORDER
		    BY draft_date DESC
	</select>
	
</mapper>