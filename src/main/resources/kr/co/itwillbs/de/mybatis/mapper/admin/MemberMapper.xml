<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.itwillbs.de.admin.mapper.MemberMapper">

	<!-- href: https://mybatis.org/mybatis-3/ko/dynamic-sql.html -->
	<sql id="templates" >
		<![CDATA[]]><!-- Character DATA(CDATA) 는 <![CDATA[문자열]]> 파싱되지 않고 그대로 출력을 위함, 쿼리에서 이스케이프 문자를 사용하지 않기 위해 썼음 -->
		<!-- 예시) 컬럼명 &gt;(&lt;) #{필드명} -> 컬럼명<![CDATA[>(<)]]> #{필드명} -->
		<if test="blabla != null"></if><!-- mybatis가 동적쿼리가 되는 시작 점. -->
		
		<choose><!-- mybatis switch 문 -->
			<when test="bla != null">
			</when>
			<when test="bla != null and blabla != null">
			</when>
			<otherwise>
			</otherwise>
		</choose>
		
		<where></where><!-- where 엘리먼트는 태그에 의해 컨텐츠가 리턴되면 단순히 “WHERE”만을 추가한다. 게다가 컨텐츠가 “AND”나 “OR”로 시작한다면 그 “AND”나 “OR”를 지워버린다. -->
		<trim prefix="WHERE" prefixOverrides="AND |OR "></trim><!-- 위의<where>의 <trim>버전 -->
		
		<set></set><!--  set 엘리먼트는 동적으로 SET 키워드를 붙히고 필요없는 콤마를 제거한다. -->
		<trim prefix="SET" suffixOverrides=","></trim><!-- 위의<set>의 <trim>버전 -->
		
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")" nullable="true">
			#{item}
		</foreach>
		
		<foreach item="item" index="index" collection="list">
			(#{item.index}, #{item.id}, #{item.name}, #{item.isDeleted})
		</foreach>
		<!-- like 문 사용 시
		[MySQL||H2]column LIKE CONCAT('%',#{keyword},'%')
		[Oracle]column LIKE '%'||#{keyword}||'%'
		[MSSQL]column LIKE '%'+#{keyword}+'%'
		 -->
	</sql>
	
	<sql id="t_member_columns_forSelectFROM">
		SELECT
			emp.id,
			emp.name,
			emp.ssn,
			emp.department_code,
			ccdi1.minor_name AS department_name,
			emp.sub_department_code,
			emp.position_code,
			ccdi2.minor_name AS position_name,
			emp.hire_date,
			emp.resignation_date,
			emp_de.phone_number,
			emp_de.email,
			emp_de.file_idxs,
			emp_de.employee_status_code,
			tmb.password,
			tmb.role,
			IFNULL(tmb.status,'NOT_YET') AS status,
			tmb.is_deleted
		FROM t_employee AS emp
		LEFT JOIN t_employee_detail AS emp_de
			ON emp.id = emp_de.id
		LEFT JOIN t_commoncode_item AS ccdi1
			ON ccdi1.major_code = 'DEPARTMENT_CODE'
			AND emp.department_code = ccdi1.minor_code
		LEFT JOIN t_commoncode_item AS ccdi2
			ON ccdi2.major_code = 'POSITION_CODE'
			AND emp.position_code = ccdi2.minor_code
		LEFT JOIN t_member AS tmb
			ON emp.id = tmb.member_id
	</sql>
	
	<sql id="t_member_columns_forSELECT">
		idx,
		member_id,
		password,
		role,
		IFNULL(status,'NOT_YET') AS status,
		is_deleted,
		reg_id,
		reg_date,
		mod_id,
		mod_date
	</sql>
	
	<!-- 임시 쿼리임 -->
	<select id="getBeforeMembers" resultType="kr.co.itwillbs.de.admin.dto.MemberDTO">
		<include refid="t_member_columns_forSelectFROM" />
		WHERE tmb.status IS NULL
	</select>
	
	<!-- 임시 쿼리임 -->
	<select id="getBeforeMembersByEmployeeSearch" parameterType="kr.co.itwillbs.de.admin.dto.EmployeeSearchDTO"
									resultType="kr.co.itwillbs.de.admin.dto.MemberDTO">
		<include refid="t_member_columns_forSelectFROM" />
		<where>
			AND tmb.status IS NULL
			<if test="id != null and id.trim() != ''">AND emp.id LIKE CONCAT('%',#{id},'%') </if>
			<if test="name != null and name.trim() != ''">AND emp.name LIKE CONCAT('%',#{name},'%') </if>
			<if test="departmentCode != null and departmentCode.trim() != ''">AND emp.department_code = #{departmentCode} </if>
			<if test="subDepartmentCode != null and subDepartmentCode.trim() != ''">AND emp.sub_department_code = #{subDepartmentCode} </if>
			<if test="positionCode != null and positionCode.trim() != ''">AND emp.position_code = #{positionCode} </if>
			<choose>
				<when test="(hireStartDate != null and hireStartDate.trim() != '')
							and (hireEndDate != null and hireEndDate.trim() != '')">
					AND emp.hire_date BETWEEN STR_TO_DATE(CONCAT(#{hireStartDate}, '000000'),'%Y-%m-%d%H%i%S') 
										AND STR_TO_DATE(CONCAT(#{hireEndDate}, '235959'),'%Y-%m-%d%H%i%S')
				</when>
				<when test="(hireStartDate != null and hireStartDate.trim() != '')
							and (hireEndDate == null or hireEndDate.trim() == '')">
					AND emp.hire_date <![CDATA[>=]]> STR_TO_DATE(CONCAT(#{hireStartDate}, '000000'),'%Y-%m-%d%H%i%S')
				</when>
				<when test="(hireStartDate == null or hireStartDate.trim() == '')
							and (hireEndDate != null and hireEndDate.trim() != '')">
					AND emp.hire_date <![CDATA[<=]]> STR_TO_DATE(CONCAT(#{hireEndDate}, '235959'),'%Y-%m-%d%H%i%S')
				</when>
			</choose>
		</where> 
	</select>
	
	<!-- 임시 쿼리임2 -->
	<select id="getBeforeMembersByIds" parameterType="kr.co.itwillbs.de.admin.dto.MemberDTO"
									resultType="kr.co.itwillbs.de.admin.dto.MemberDTO">
		SELECT
			emp.id,
			emp.ssn,
			emp.hire_date,
			emp.resignation_date,
			emp_de.phone_number,
			emp_de.email,
			emp_de.file_idxs,
			emp_de.employee_status_code,
			tmb.password,
			tmb.role,
			IFNULL(tmb.status,'NOT_YET') AS status,
			tmb.is_deleted
		FROM t_employee AS emp
		LEFT JOIN t_employee_detail AS emp_de
			on emp.id = emp_de.id
		LEFT JOIN t_member AS tmb
			on emp.id = tmb.member_id
		WHERE tmb.status IS NULL
			AND emp.id IN (
			<foreach item="item" index="index" collection="list" separator=",">
			#{item.id}
			</foreach>
						)
	</select>
	
	<insert id="registerMembers" parameterType="kr.co.itwillbs.de.admin.dto.MemberDTO">
		insert into t_member (
		<trim suffixOverrides=",">
			member_id,
			password,
			role,
			status,
			is_deleted,
			reg_id,
			reg_date,
		</trim>
		) values 
		<foreach item="item" index="index" collection="list" separator=",">
			(#{item.id}, #{item.password}, #{item.role}, #{item.status}, #{item.isDeleted}, #{item.regId}, now())
		</foreach>
	</insert>
	<!-- 임시 쿼리임 -->
	<select id="getMembers" resultType="kr.co.itwillbs.de.admin.dto.MemberDTO">
		<include refid="t_member_columns_forSelectFROM" />
		WHERE tmb.status IS NOT NULL
	</select>
	
	<!-- 임시 쿼리임 -->
	<select id="getMembersBySearchDTO" parameterType="kr.co.itwillbs.de.admin.dto.MemberSearchDTO"
										resultType="kr.co.itwillbs.de.admin.dto.MemberDTO">
		<include refid="t_member_columns_forSelectFROM" />
		<where>
			AND tmb.status IS NOT NULL
			<if test="memberId != null and memberId.trim() != ''">AND emp.id LIKE CONCAT('%',#{memberId},'%') </if>
			<if test="memberName != null and memberName.trim() != ''">AND emp.name LIKE CONCAT('%',#{memberName},'%') </if>
			<if test="role != null and role.trim() != ''">AND tmb.role = #{role} </if>
			<if test="status != null and status.trim() != ''">AND tmb.status = #{status} </if>
			<if test="isDeleted != null and isDeleted.trim() != ''">AND tmb.is_deleted = #{isDeleted} </if>
		</where>
	</select>

	<select id="getMember" resultType="kr.co.itwillbs.de.admin.dto.MemberDTO">
		SELECT
			<include refid="t_member_columns_forSELECT" />
		FROM t_member
		WHERE member_id = #{memberId}
	</select>
	
	<update id="modifyMember" parameterType="kr.co.itwillbs.de.admin.dto.MemberDTO">
		update t_member
			<set>
				<if test="password !=null and !(''.equals(password.trim()))">name = #{name},</if>
				<if test="role !=null and !(''.equals(role.trim()))">role = #{role},</if>
				<if test="status !=null and !(''.equals(status.trim()))">status = #{status},</if>
				<if test="isDeleted !=null and !(''.equals(isDeleted.trim()))">is_deleted = #{isDeleted},</if>
				<if test="modId !=null and !(''.equals(modId.trim()))">mod_id = #{modId},</if>
				<if test="modId !=null and !(''.equals(modId.trim()))">mod_date = now(),</if>
			</set> 
		where idx = #{idx}
	</update>
</mapper>