/*------table------------------------*/

use testdb;


create table t_log (
	idx INT(11) NOT NULL AUTO_INCREMENT,
	accessId varchar(50),
	accessType varchar(2),
	accessDevice varchar(2),
	ip varchar(20),
	parameters varchar(1000),
	url varchar(50),
	accessDate DATETIME,
	CONSTRAINT t_log_pk PRIMARY KEY(idx)
);


create table t_order (
	idx INT(11) NOT NULL AUTO_INCREMENT,
	document_number varchar(50),
	trade_code varchar(50),
	status_code varchar(50),
	business_name varchar(50),
	business_number varchar(50),
	request_date varchar(50),
	expected_date varchar(50),
	due_date varchar(50),
	destination_name varchar(50),
	reciver varchar(50),
	phone1 varchar(50),
	phone2 varchar(50),
	post_code varchar(10),
	address1 varchar(100),
	address2 varchar(100),
	special_issue varchar(200),
	is_deleted varchar(2),
	reg_id varchar(50),
	reg_date DATETIME,
	mod_id varchar(50),
	mod_date DATETIME,
	CONSTRAINT t_order_pk PRIMARY KEY(idx)
);

create table t_order_detail (
	idx INT(11) NOT NULL AUTO_INCREMENT,
	document_number varchar(50),
	department_code varchar(50),
	client_name varchar(50),
	client_phone varchar(50),
	lot_number varchar(50),
	invoice_issue varchar(50),
	payment_status varchar(50),
	unissued_status varchar(50),
	supply_amount varchar(50),
	vat_amount varchar(50),
	total_amount varchar(50),
	issue_code varchar(50),
	issue_remaks varchar(50),
	is_deleted varchar(2),
	reg_id varchar(50),
	reg_date DATETIME,
	mod_id varchar(50),
	mod_date DATETIME,
	CONSTRAINT t_order_detail_pk PRIMARY KEY(idx)
);


create table t_order_items (
	idx INT(11) NOT NULL AUTO_INCREMENT,
	order_document_number varchar(50),
	product_code varchar(50),
	product_number varchar(50),
	product_name varchar(50),
	product_value varchar(50),
	unit_price numeric,
	total_price numeric,
	is_deleted varchar(2),
	reg_id varchar(50),
	reg_date DATETIME,
	mod_id varchar(50),
	mod_date DATETIME,
	CONSTRAINT t_order_items_pk PRIMARY KEY(idx)
);


/*------seq------------------------*/

use testdb;

-- 시퀀스 테이블 생성
CREATE TABLE sequence_table (
    name VARCHAR(50) PRIMARY KEY,  -- 시퀀스 이름
    current_value BIGINT NOT NULL  -- 현재 값
);

-- nextVal 프로시저 생성
DELIMITER $$
CREATE PROCEDURE get_next_sequence(IN seq_name VARCHAR(50), OUT next_value BIGINT)
BEGIN
    DECLARE current BIGINT;
    -- 현재 값 가져오기
    SELECT current_value INTO current FROM sequence_table WHERE name = seq_name FOR UPDATE;
    -- 값이 존재하지 않으면 오류 방지
    IF current IS NULL THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Sequence not found';
    END IF;
    -- 다음 값 계산
    SET next_value = current + 1;
    -- 시퀀스 값 업데이트
    UPDATE sequence_table SET current_value = next_value WHERE name = seq_name;
END $$
DELIMITER ;

-- nextVal 함수 생성
DELIMITER $$
CREATE FUNCTION nextVal(seq_name VARCHAR(50)) RETURNS BIGINT
DETERMINISTIC
BEGIN
    DECLARE next_value BIGINT;
    -- 프로시저 호출
    CALL get_next_sequence(seq_name, next_value);
    RETURN next_value;
END $$
DELIMITER ;


-- 초기값 설정
INSERT INTO sequence_table (name, current_value) VALUES ('seq_order_number', 100000);

-- 실행
SELECT nextVal('seq_order_number');